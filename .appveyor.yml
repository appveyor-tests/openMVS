# Specify version format
version: "{build}"

image:
  - Visual Studio 2017
  - Ubuntu

platform: x64

# specify custom environment variables
environment:
  MSVC_DEFAULT_OPTIONS: ON
  CMAKE_TOOLCHAIN_FILE: -DCMAKE_TOOLCHAIN_FILE="C:\tools\vcpkg\scripts\buildsystems\vcpkg.cmake"
  matrix:
    - CMAKE_GENERATOR: -G"Visual Studio 15 2017 Win64"
      CMAKE_TOOLCHAIN: -T"v141"

# build configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# scripts that are called at very beginning, before repo cloning
init:
  - cmd: cmake --version
  - cmd: msbuild /version

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# scripts that run after cloning repository
install:
  #------------------
  # Windows 10
  #------------------
  # update vcpkg
  - cmd: cd C:\tools\vcpkg
  - cmd: git pull
  - cmd: .\bootstrap-vcpkg.bat
  
  - cmd: if "%platform%"=="Win32" set VCPKG_ARCH=x86-windows
  - cmd: if "%platform%"=="x64"   set VCPKG_ARCH=x64-windows

  # remove outdated versions
  - cmd: vcpkg remove --outdated --recurse

  # install required dependencies
  - cmd: vcpkg install --recurse --triplet %VCPKG_ARCH% zlib boost-iostreams boost-program-options boost-system boost-serialization eigen3 ceres opencv cgal
  
  # install optional dependencies
  - cmd: vcpkg install --recurse --triplet %VCPKG_ARCH% glew glfw3
  
  - cmd: vcpkg integrate install
  - cmd: cd "%APPVEYOR_BUILD_FOLDER%"

  #------------------
  # Ubuntu 16.04 LTS 
  #------------------
  - sh: sudo apt-get update -qq && sudo apt-get install -qq
  - sh: sudo apt-get -y install build-essential git mercurial cmake libpng-dev libjpeg-dev libtiff-dev libglu1-mesa-dev
  - sh: sudo apt-get -y install libboost-iostreams-dev libboost-program-options-dev libboost-system-dev libboost-serialization-dev
  - sh: sudo apt-get -y install libeigen3-dev libopencv-dev libcgal-dev libcgal-qt5-dev libatlas-base-dev libsuitesparse-dev libceres-dev
  - sh: sudo apt-get -y install freeglut3-dev libglew-dev libglfw3-dev

# preserve contents of selected directories and files across project builds
cache:
  - C:\tools\vcpkg\installed -> .appveyor.yml

build_script:
  #------------------
  # Windows 10
  #------------------
  - cmd: git clone https://github.com/cdcseacave/VCG.git
  - cmd: mkdir build && cd build
  - cmd: cmake %CMAKE_GENERATOR% -DCMAKE_BUILD_TYPE=%configuration% -DVCG_ROOT="..\VCG" %CMAKE_TOOLCHAIN_FILE% %CMAKE_TOOLCHAIN% ..
  - cmd: cmake --build . --target ALL_BUILD --config %configuration% -- /maxcpucount:4
  
  #------------------
  # Ubuntu 16.04 LTS
  #------------------
  - sh: git clone https://github.com/cdcseacave/VCG.git
  - sh: mkdir build && cd build
  - sh: cmake -DCMAKE_BUILD_TYPE=$configuration -DVCG_ROOT="../VCG" ..
  - sh: make -j4

test_script:
  #- cmd: ctest --build-config %configuration% --parallel 4 --output-on-failure
  #- sh: ctest -j4
