# Specify version format
version: "{build}"

image:
#  - Visual Studio 2017
  - ubuntu1804

platform:
  - x64

# specify custom environment variables
environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUvrULRVnqephhFVqt2Gm+MRkLewIa7bfrrHTp1+Y6ulBlycVumHKsLMzeulCnxUP7+gVJ9cIQtbNBOt9oGEcSGBNGtmoDPsNOo6lA/9eVkQQR+WlgKYFK2LgtJY2FMpmkeD8BA06lz0arR6oQAac6Yjfn7HQq0XRkmJaFwrgc258JwSldbp9RNGDd7j6DzF1F3QsiLRFeHqZni6eNMnC3Xhmh0Jj4hDjYpeXWKuZjGPXAuVry0XTXPoLaUNfi0R9aDhtD8NszdzWKNwYt2iPKBVaSkMeDFkyLo3+CGLHKw//Uw8GIhtRQk4S6/Yfo7LS3leOJxJs7dryJiUS0IwT9 wasapl@appveyor.com
  APPVEYOR_SSH_BLOCK: true

# build configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
#  - Release

# scripts that are called at very beginning, before repo cloning
init:
  #------------------
  # Windows 10
  #------------------
  - cmd: ver
  - cmd: cmake --version
  - cmd: msbuild /version

  #------------------
  # Ubuntu 18.04 LTS 
  #------------------
  - sh: lsb_release -a
  - sh: cmake --version
  - sh: update-alternatives --display c++
  - sh: update-alternatives --display gcc
  - sh: c++ --version
  
# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# scripts that run after cloning repository
install:
  #------------------
  # Windows 10
  #------------------
  # update vcpkg
  - cmd: cd C:\tools\vcpkg
  - cmd: git pull
  - cmd: .\bootstrap-vcpkg.bat

  - cmd: if "%platform%"=="Win32" set VCPKG_ARCH=x86-windows
  - cmd: if "%platform%"=="x64"   set VCPKG_ARCH=x64-windows

  # remove outdated versions
  - cmd: vcpkg remove --outdated --recurse

  # install required dependencies
  - cmd: vcpkg install --recurse --triplet %VCPKG_ARCH% zlib boost-iostreams boost-program-options boost-system boost-serialization eigen3 cgal[core] opencv

  # install optional dependencies
  - cmd: vcpkg install --recurse --triplet %VCPKG_ARCH% glew glfw3

  - cmd: vcpkg integrate install
  - cmd: cd "%APPVEYOR_BUILD_FOLDER%"

  #------------------
  # Ubuntu 18.04 LTS 
  #------------------
  - sh: sudo apt-get update -qq && sudo apt-get install -qq
  - sh: sudo apt-get -y install build-essential git mercurial cmake libpng-dev libjpeg-dev libtiff-dev libglu1-mesa-dev libxmu-dev libxi-dev
  - sh: sudo apt-get -y install libboost-iostreams-dev libboost-program-options-dev libboost-system-dev libboost-serialization-dev
  - sh: sudo apt-get -y install libopencv-dev libcgal-dev libcgal-qt5-dev libatlas-base-dev
  #- sh: sudo apt-get -y install libsuitesparse-dev libceres-dev
  - sh: sudo apt-get -y install freeglut3-dev libglew-dev libglfw3-dev

# preserve contents of selected directories and files across project builds
for:
-
  matrix:
    only:
      - image: Visual Studio 2017
  cache:
    - 'C:\tools\vcpkg\installed'
-
  matrix:
    only:
      - image: ubuntu1804
  cache:
    - '/usr/lib/x86_64-linux-gnu/'

build_script:
  # get VCG library
  - git clone https://github.com/cdcseacave/VCG.git

  #------------------
  # Windows 10
  #------------------
  - cmd: if "%platform%"=="Win32" set CMAKE_GENERATOR=-G"Visual Studio 15 2017"
  - cmd: if "%platform%"=="x64"   set CMAKE_GENERATOR=-G"Visual Studio 15 2017 Win64"
  - cmd: mkdir bin && cd bin
  - cmd: cmake %CMAKE_GENERATOR% -DCMAKE_BUILD_TYPE=%Configuration% -DCMAKE_TOOLCHAIN_FILE="C:\tools\vcpkg\scripts\buildsystems\vcpkg.cmake" -DVCG_ROOT="%APPVEYOR_BUILD_FOLDER%\VCG" ..
  - cmd: cmake --build . --target ALL_BUILD --config %Configuration% -- /maxcpucount:4

  #------------------
  # Ubuntu 18.04 LTS
  #------------------
  - sh: hg clone https://bitbucket.org/eigen/eigen#3.2
  - sh: mkdir eigen_build && cd eigen_build
  - sh: cmake . ../eigen
  - sh: make && sudo make install
  - sh: cd ..
  - sh: mkdir bin && cd bin
  - sh: export GCC_COLORS=
  - sh: cmake -DCMAKE_BUILD_TYPE=$Configuration -DVCG_ROOT="$APPVEYOR_BUILD_FOLDER/VCG" -DCMAKE_COLOR_MAKEFILE=off ..
  - sh: cat CMakeCache.txt
  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
  - sh: make 2>make.err

test_script:
  #- cmd: ctest --build-config %Configuration% --parallel 4 --output-on-failure
  #- sh: ctest -j4
  
on_success:
  - cmd: 7z a OpenMVS_x64.7z "C:\projects\openmvs\bin\bin\vc15\x64\%Configuration%\*.exe" "C:\projects\openmvs\bin\bin\vc15\x64\%Configuration%\*.dll"
  - cmd: appveyor PushArtifact OpenMVS_x64.7z
  - sh: |
      if [ -f "$APPVEYOR_BUILD_FOLDER/bin/make.err" ]; then
          appveyor PushArtifact make.err
      fi

on_failure:
  - sh: |
      if [ -f "$APPVEYOR_BUILD_FOLDER/bin/make.err" ]; then
          appveyor PushArtifact make.err
      fi
        
        
        
        
